{"version":3,"sources":["../src/index.ts"],"sourcesContent":["interface LoggerOptions {\n    output: 'console' | 'file';\n    format: string;\n  }\n  \n  enum LogLevel {\n    BEFORE = \"BEFORE\",\n    AFTER = \"AFTER\",\n    ERROR = \"ERROR\",\n  }\n  \n  class TestLogger {\n  \n    private options: LoggerOptions\n  \n    private constructor(options: LoggerOptions) {\n      this.options = options;\n    }\n  \n    private formatLog<T>(options: Pick<LoggerOptions, \"output\">, messageString: string, message:T) {\n      switch (options.output) {\n        case 'console':\n          console.log(messageString,message);\n          break;\n        case 'file':\n          // write to file\n          break;\n        default:\n          throw new Error('Invalid output type');\n      }\n    }\n  \n    private log<T>(message: T, level: LogLevel, enableTimestamp: boolean) {\n      const timestamp = enableTimestamp ? new Date().toISOString() : '';\n      const logMessage = this.options.format\n        .replace('{timestamp}', timestamp)\n        .replace('{level}', level)\n        \n  \n      this.formatLog(this.options, logMessage, message);\n    }\n  \n    before<T>(message: T, hasTimestamp: boolean = false) {\n      this.log(message, LogLevel.BEFORE, hasTimestamp)\n    }\n    after<T>(message: T, hasTimestamp: boolean = false) {\n      this.log(message, LogLevel.AFTER, hasTimestamp)\n    }\n    error<T>(message: T, hasTimestamp: boolean = false) {\n      this.log(message, LogLevel.ERROR, hasTimestamp)\n    }\n  \n    static create(options?: Partial<LoggerOptions>): TestLogger{\n      const defaultConfig: LoggerOptions = {\n        output: 'console',\n        format: '{timestamp} [{level}]',\n      }\n  \n      const mergeConfig = { ...defaultConfig, ...options };\n  \n      return new TestLogger(mergeConfig);\n    }\n  }\n  \n  export default TestLogger; \n"],"mappings":";;;;;;;;;;;;;;;;;;AAWE,IAAM,aAAN,MAAM,YAAW;AAAA,EAIP,YAAY,SAAwB;AAC1C,SAAK,UAAU;AAAA,EACjB;AAAA,EAEQ,UAAa,SAAwC,eAAuB,SAAW;AAC7F,YAAQ,QAAQ,QAAQ;AAAA,MACtB,KAAK;AACH,gBAAQ,IAAI,eAAc,OAAO;AACjC;AAAA,MACF,KAAK;AAEH;AAAA,MACF;AACE,cAAM,IAAI,MAAM,qBAAqB;AAAA,IACzC;AAAA,EACF;AAAA,EAEQ,IAAO,SAAY,OAAiB,iBAA0B;AACpE,UAAM,YAAY,mBAAkB,oBAAI,KAAK,GAAE,YAAY,IAAI;AAC/D,UAAM,aAAa,KAAK,QAAQ,OAC7B,QAAQ,eAAe,SAAS,EAChC,QAAQ,WAAW,KAAK;AAG3B,SAAK,UAAU,KAAK,SAAS,YAAY,OAAO;AAAA,EAClD;AAAA,EAEA,OAAU,SAAY,eAAwB,OAAO;AACnD,SAAK,IAAI,SAAS,uBAAiB,YAAY;AAAA,EACjD;AAAA,EACA,MAAS,SAAY,eAAwB,OAAO;AAClD,SAAK,IAAI,SAAS,qBAAgB,YAAY;AAAA,EAChD;AAAA,EACA,MAAS,SAAY,eAAwB,OAAO;AAClD,SAAK,IAAI,SAAS,qBAAgB,YAAY;AAAA,EAChD;AAAA,EAEA,OAAO,OAAO,SAA6C;AACzD,UAAM,gBAA+B;AAAA,MACnC,QAAQ;AAAA,MACR,QAAQ;AAAA,IACV;AAEA,UAAM,cAAc,kCAAK,gBAAkB;AAE3C,WAAO,IAAI,YAAW,WAAW;AAAA,EACnC;AACF;AAEA,IAAO,cAAQ;","names":[]}